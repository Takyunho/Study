
// $.ajax() 라는 함수를 쓰고 안에 {} 오브젝트 형식으로 몇개만 셋팅
// {} 오브젝트 안에는 url, type 이 두개가 필수로 들어갑니다. 
// url 정보란엔 데이터 요청할 서버 URL, 
// type 정보란엔 요청의 종류를 적어주시면 됩니다. 
$('#getBtn').click(function () {
  $.ajax({
    url: 'https://codingapple1.github.io/hello.txt',
    type: 'GET'
  }).done(function (데이터) {
    $('#hello').html(데이터);
  });

  // ajax() 뒤에 .done() 함수를 붙인 뒤에 콜백함수를 하나 추가해줍니다. 
  // 그 다음에 콜백함수에 파라미터 아무거나 집어넣으신 후에 그걸 콘솔창에 출력해보시면
  // 그것이 바로 받아온 데이터입니다. 
  // (done함수는 그냥 복붙해서 쓰시면 됩니다.)

})


// Ajax란?

// 서버에 요청을 해서 데이터를 가져오거나 보내고싶을 때가 있습니다. 
// 그런데 서버에 요청을 할 때 새로고침 없이 데이터를
// 주고받을 수 있게 도와주는게 바로 Ajax입니다.
// Ajax를 이용하면 새로고침 없이 여러분이 아이디와 비번을 서버로 보낼 수도 있고 
// 새로고침없이도 쇼핑몰 상품들을 하단에 더 불러올 수 있습니다. 
// 근데 서버에 요청을 한다는 소리가 뭔지 모르겠죠? 


// 서버란 ?

// 그냥 요청을 하면 데이터를 갖다주는 기계일 뿐입니다.
// 예를 들면 네이버 웹툰서버는 유저가 요청하면 네이버 웹툰 이미지를 갖다주는 기계일 뿐입니다.


// 요청이란?

// 서버에 뭐 요청을 한다고 설명했는데.. 서버에 요청을 하는 방법은 전통적으로 두가지가 있습니다. 

// 1. GET 요청 : URL을 입력해서 서버가 주는 데이터를 받아올 수 있습니다. 
// - 보통 웹페이지를 읽거나 데이터를 받아올 때 많이 사용합니다.  
// - URL에 여러가지 정보를 추가해서 서버로 원하는 데이터를 전송할 수도 있습니다.
// - 우리가 브라우저 주소창에 naver.com 이렇게 때려박는게 바로 GET 요청 방법 중의 하나입니다. 

// 2. POST 요청 : 원하는 데이터를 서버로 전송할 수 있습니다. 
// - 로그인하거나 블로그 글발행처럼 정보를 전송할 때 많이 사용합니다. 
// - GET요청처럼 URL에 정보를 추가하지않고 정보를 다른 곳에 숨겨서 전달합니다.

// 근데 GET, POST 요청시 보통 페이지가 새로고침이 되는게 일반적인데,
// Ajax를 쓰시면 새로고침 없이도 GET, POST 요청을 보낼 수 있습니다.