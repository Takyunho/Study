.ani-text {
  text-align: center;
  /* 트랜스폼은 어떤 요소를 독립적으로 움직이게 만들고 싶을 때 사용한다.(본인 원래 위치에서
  자유롭게 즉 다른 요소에 영향 없이 이동하게 된다.
  
  transform : rotate(10deg);              회전 
  transform : translate(10px, 20px);      좌표이동
  transform : scale(2);                   확대축소
  transform : skew(30deg);                비틀기
  */
  
  /*
  transform 두개 이상을 한꺼번에 쓰려면
  transform : rotate(10deg) translateX(30px);
  */
}

.ani-text:hover {
  animation-name: 작명;
  animation-duration: 1s;
  /*
  animation-timing-function : linear;         베지어 주기
  animation-delay : 1s;                     시작 전 딜레이
  animation-iteration-count : 3;          몇회 반복할것인가
  animation-play-state : paused;      애니메이션을 멈추고 싶은 경우 자바스크립트로 이거 조정
  animation-fill-mode: forwards;      애니메이션 끝난 후에 원상복구 하지말고 정지
  */
}


/* 트랜지션은 a -> b로만 가능 */
/* 애니메이션은 a -> b -> c로 가능 */

@keyframes 작명 {
  0% {
    transform: translateX(0px);
  }
  50% {
    transform: translateX(-100px);
  }
  75% {
    transform: translateX(100px);
  }
  100% {
    transform: translateX(0px);
  }
}
/* ✅ margin, width, left, 이런거 말고 transform 쓰라는 이유 

크롬같은 웹브라우저들은 html css를 2D 그래픽으로 바꿔주는 간단한 프로그램입니다.
근데 html css를 그래픽으로 바꿀 때
1.Render Tree만들기 -> 2.layout 잡기 -> 3.색칠(paint)하기
-> 4.Composite 처리(transform 적용하기 등) 순서로 동작합니다.  
layout이 바뀌면 layout 부터 transform 까지 쭉 다시 렌더링해야하는데
transform이 바뀌면 transform 부분만 다시 렌더링하면 됩니다. 
그래서 뭔가 이동시키고 싶으면 margin 쓰는 것 보다 transform 쓰는게 빠르게 동작합니다.
*/

/* ✅ 성능 잡을 수 있는 여러 방법1. will-change 쓰면 됩니다. 

.ani-text {
  will-change: transform;
}
애니메이션을 주는 .ani-text가 약간 느리게 동작한다면 
will-change : 애니메이션줄속성;
이걸 써놓으면 성능개선이 가능합니다. 바뀔 내용을 미리 렌더링해주는 속성이라 그렇습니다.
뭔가 이상하게 버벅일 때만 쓰시고 애니메이션이 스무스하게 잘 된다면 쓸 이유는 없습니다.
이상하게 많이 쓰면 브라우저 자체가 더 느려질 수 있습니다.
*/